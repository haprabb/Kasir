/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.adminkasirnew;
import java.awt.CardLayout;
import java.awt.Component;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicButtonUI;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author tbhan
 */
public class marketNew extends javax.swing.JFrame {
       Statement stat;
       ResultSet res;
       String nama,nim,nama2,harga,jumlah,kode;
    /**
     * Creates new form marketNew
     */
    CardLayout cardLayout;
    public marketNew() {
        initComponents();
        
        cardLayout = (CardLayout)(pnlCards.getLayout());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        Logout = new javax.swing.JButton();
        Product = new javax.swing.JButton();
        Member = new javax.swing.JButton();
        Market = new javax.swing.JButton();
        pnlCards = new javax.swing.JPanel();
        pnlCard1 = new javax.swing.JPanel();
        buttonNotMember = new javax.swing.JButton();
        buttonMember = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblBarang2 = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        inputHarga1 = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        inputBayar = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        inputKembali = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblBarang3 = new javax.swing.JTable();
        inputJumlah3 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        inputNamaKasir = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        pnlCard2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblBarang = new javax.swing.JTable();
        inputJumlah = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        inputBarang = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        inputHarga = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        inputID = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        tmblTampil1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        pnlCard3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        inputNoTelp = new javax.swing.JTextField();
        inputUsername = new javax.swing.JTextField();
        tmblTambah = new javax.swing.JButton();
        tmblTampil = new javax.swing.JButton();
        tmblHapus = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblMember = new javax.swing.JTable();
        tmblHapus1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane1.setDividerLocation(200);
        jSplitPane1.setPreferredSize(new java.awt.Dimension(450, 450));

        jPanel1.setBackground(new java.awt.Color(0, 56, 68));
        jPanel1.setPreferredSize(new java.awt.Dimension(130, 450));

        Logout.setBackground(new java.awt.Color(0, 108, 103));
        Logout.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Logout.setForeground(new java.awt.Color(242, 242, 242));
        Logout.setText("Logout");
        Logout.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Logout.setPreferredSize(new java.awt.Dimension(100, 50));
        Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });

        Product.setBackground(new java.awt.Color(0, 108, 103));
        Product.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Product.setForeground(new java.awt.Color(242, 242, 242));
        Product.setText("Product");
        Product.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Product.setMaximumSize(new java.awt.Dimension(100, 100));
        Product.setMinimumSize(new java.awt.Dimension(100, 100));
        Product.setPreferredSize(new java.awt.Dimension(100, 100));
        Product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductActionPerformed(evt);
            }
        });

        Member.setBackground(new java.awt.Color(0, 108, 103));
        Member.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        Member.setForeground(new java.awt.Color(242, 242, 242));
        Member.setText("Member");
        Member.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Member.setPreferredSize(new java.awt.Dimension(100, 50));
        Member.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MemberActionPerformed(evt);
            }
        });

        Market.setBackground(new java.awt.Color(0, 108, 103));
        Market.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Market.setForeground(new java.awt.Color(242, 242, 242));
        Market.setText("Market");
        Market.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Market.setPreferredSize(new java.awt.Dimension(100, 100));
        Market.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarketActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Logout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Member, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Product, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Market, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addComponent(Market, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(Product, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(Member, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(Logout, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        pnlCards.setLayout(new java.awt.CardLayout());

        pnlCard1.setBackground(new java.awt.Color(0, 56, 68));

        buttonNotMember.setBackground(new java.awt.Color(0, 108, 103));
        buttonNotMember.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonNotMember.setForeground(new java.awt.Color(242, 242, 242));
        buttonNotMember.setText("Non-Member");
        buttonNotMember.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonNotMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNotMemberActionPerformed(evt);
            }
        });

        buttonMember.setBackground(new java.awt.Color(0, 108, 103));
        buttonMember.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buttonMember.setForeground(new java.awt.Color(242, 242, 242));
        buttonMember.setText("Member");
        buttonMember.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buttonMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMemberActionPerformed(evt);
            }
        });

        tblBarang2.setBackground(new java.awt.Color(0, 108, 103));
        tblBarang2.setForeground(new java.awt.Color(242, 242, 242));
        tblBarang2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nama barang", "Harga", "Jumlah", "Id Barang"
            }
        ));
        tblBarang2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBarang2MouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tblBarang2);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(242, 242, 242));
        jLabel10.setText("Harga");

        inputHarga1.setBackground(new java.awt.Color(0, 108, 103));
        inputHarga1.setForeground(new java.awt.Color(242, 242, 242));

        jButton9.setBackground(new java.awt.Color(0, 108, 103));
        jButton9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Beli");
        jButton9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(242, 242, 242));
        jLabel14.setText("Bayar");

        inputBayar.setBackground(new java.awt.Color(0, 108, 103));
        inputBayar.setForeground(new java.awt.Color(242, 242, 242));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(242, 242, 242));
        jLabel15.setText("Kembali");

        inputKembali.setBackground(new java.awt.Color(0, 108, 103));
        inputKembali.setForeground(new java.awt.Color(242, 242, 242));

        tblBarang3.setBackground(new java.awt.Color(0, 108, 103));
        tblBarang3.setForeground(new java.awt.Color(242, 242, 242));
        tblBarang3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Id Barang", "Nama barang", "Harga", "Jumlah", "Total"
            }
        ));
        jScrollPane7.setViewportView(tblBarang3);

        inputJumlah3.setBackground(new java.awt.Color(0, 108, 103));
        inputJumlah3.setForeground(new java.awt.Color(242, 242, 242));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(242, 242, 242));
        jLabel11.setText("Jumlah");

        inputNamaKasir.setBackground(new java.awt.Color(0, 108, 103));
        inputNamaKasir.setForeground(new java.awt.Color(242, 242, 242));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(242, 242, 242));
        jLabel12.setText("Nama Kasir");

        javax.swing.GroupLayout pnlCard1Layout = new javax.swing.GroupLayout(pnlCard1);
        pnlCard1.setLayout(pnlCard1Layout);
        pnlCard1Layout.setHorizontalGroup(
            pnlCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCard1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlCard1Layout.createSequentialGroup()
                        .addComponent(buttonNotMember, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonMember, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCard1Layout.createSequentialGroup()
                                .addComponent(inputHarga1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCard1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(28, 28, 28)))
                        .addGroup(pnlCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputBayar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCard1Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(22, 22, 22)))
                        .addGroup(pnlCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlCard1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(inputKembali, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCard1Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(9, 9, 9)))
                        .addGap(19, 19, 19))
                    .addGroup(pnlCard1Layout.createSequentialGroup()
                        .addGroup(pnlCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                        .addGroup(pnlCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCard1Layout.createSequentialGroup()
                                .addGroup(pnlCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlCard1Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel11))
                                    .addGroup(pnlCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(inputJumlah3, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                        .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(inputNamaKasir)))
                                .addGap(86, 86, 86))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCard1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(68, 68, 68))))))
        );
        pnlCard1Layout.setVerticalGroup(
            pnlCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCard1Layout.createSequentialGroup()
                .addGroup(pnlCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCard1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlCard1Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputNamaKasir, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addComponent(jLabel11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCard1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(inputJumlah3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(jButton9))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(pnlCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputHarga1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputKembali, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonNotMember)
                    .addComponent(buttonMember))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pnlCards.add(pnlCard1, "pnlCard1");

        pnlCard2.setBackground(new java.awt.Color(0, 56, 68));

        tblBarang.setBackground(new java.awt.Color(0, 108, 103));
        tblBarang.setForeground(new java.awt.Color(242, 242, 242));
        tblBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nama barang", "Harga", "Jumlah", "Id Barang"
            }
        ));
        jScrollPane4.setViewportView(tblBarang);

        inputJumlah.setBackground(new java.awt.Color(0, 108, 103));
        inputJumlah.setForeground(new java.awt.Color(242, 242, 242));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(242, 242, 242));
        jLabel5.setText("Barang");

        inputBarang.setBackground(new java.awt.Color(0, 108, 103));
        inputBarang.setForeground(new java.awt.Color(242, 242, 242));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(242, 242, 242));
        jLabel6.setText("Jumlah");

        jButton4.setBackground(new java.awt.Color(0, 108, 103));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Tambah");
        jButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(242, 242, 242));
        jLabel7.setText("Harga");

        inputHarga.setBackground(new java.awt.Color(0, 108, 103));
        inputHarga.setForeground(new java.awt.Color(242, 242, 242));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(242, 242, 242));
        jLabel8.setText("Id Barang");

        inputID.setBackground(new java.awt.Color(0, 108, 103));
        inputID.setForeground(new java.awt.Color(242, 242, 242));

        jButton5.setBackground(new java.awt.Color(0, 108, 103));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(242, 242, 242));
        jButton5.setText("Hapus");
        jButton5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        tmblTampil1.setBackground(new java.awt.Color(0, 108, 103));
        tmblTampil1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        tmblTampil1.setForeground(new java.awt.Color(242, 242, 242));
        tmblTampil1.setText("Tampil");
        tmblTampil1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tmblTampil1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tmblTampil1ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(0, 108, 103));
        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(242, 242, 242));
        jButton6.setText("Ubah");
        jButton6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCard2Layout = new javax.swing.GroupLayout(pnlCard2);
        pnlCard2.setLayout(pnlCard2Layout);
        pnlCard2Layout.setHorizontalGroup(
            pnlCard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCard2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(pnlCard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tmblTampil1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCard2Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(pnlCard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlCard2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel5)))
                .addGap(56, 56, 56)
                .addGroup(pnlCard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputHarga, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCard2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(11, 11, 11)))
                .addGroup(pnlCard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCard2Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(inputJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlCard2Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlCard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCard2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(inputID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );
        pnlCard2Layout.setVerticalGroup(
            pnlCard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCard2Layout.createSequentialGroup()
                .addGroup(pnlCard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlCard2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlCard2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(tmblTampil1)
                        .addGap(27, 27, 27)
                        .addComponent(jButton4)
                        .addGap(28, 28, 28)
                        .addComponent(jButton5)
                        .addGap(23, 23, 23)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(pnlCard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCard2Layout.createSequentialGroup()
                        .addGroup(pnlCard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlCard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputBarang)
                            .addComponent(inputHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlCard2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputID)))
                .addGap(72, 72, 72))
        );

        pnlCards.add(pnlCard2, "pnlCard2");

        pnlCard3.setBackground(new java.awt.Color(0, 56, 68));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("No. Telpon");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("USERNAME");

        inputNoTelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputNoTelpActionPerformed(evt);
            }
        });

        inputUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputUsernameActionPerformed(evt);
            }
        });

        tmblTambah.setBackground(new java.awt.Color(0, 108, 103));
        tmblTambah.setForeground(new java.awt.Color(242, 242, 242));
        tmblTambah.setText("Tambah");
        tmblTambah.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tmblTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tmblTambahActionPerformed(evt);
            }
        });

        tmblTampil.setBackground(new java.awt.Color(0, 108, 103));
        tmblTampil.setForeground(new java.awt.Color(242, 242, 242));
        tmblTampil.setText("Tampil");
        tmblTampil.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tmblTampil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tmblTampilActionPerformed(evt);
            }
        });

        tmblHapus.setBackground(new java.awt.Color(0, 108, 103));
        tmblHapus.setForeground(new java.awt.Color(242, 242, 242));
        tmblHapus.setText("Hapus");
        tmblHapus.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tmblHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tmblHapusActionPerformed(evt);
            }
        });

        tblMember.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nama", "Nomer"
            }
        ));
        jScrollPane3.setViewportView(tblMember);

        tmblHapus1.setBackground(new java.awt.Color(0, 108, 103));
        tmblHapus1.setForeground(new java.awt.Color(242, 242, 242));
        tmblHapus1.setText("Ubah");
        tmblHapus1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tmblHapus1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tmblHapus1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCard3Layout = new javax.swing.GroupLayout(pnlCard3);
        pnlCard3.setLayout(pnlCard3Layout);
        pnlCard3Layout.setHorizontalGroup(
            pnlCard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCard3Layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCard3Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(pnlCard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addGroup(pnlCard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputNoTelp, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(136, 136, 136))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCard3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tmblTampil, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(tmblTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(tmblHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(tmblHapus1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(152, 152, 152))
        );
        pnlCard3Layout.setVerticalGroup(
            pnlCard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCard3Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(pnlCard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputNoTelp, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tmblTampil)
                    .addComponent(tmblHapus)
                    .addComponent(tmblTambah)
                    .addComponent(tmblHapus1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pnlCards.add(pnlCard3, "pnlCard3");

        jSplitPane1.setRightComponent(pnlCards);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 925, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MarketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarketActionPerformed
        cardLayout.show(pnlCards, "pnlCard1");
        try (
        Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/databasekasir", "root", "")) {
        Statement st = connection.createStatement();
        String query = "SELECT * FROM barang";

        PreparedStatement pst = connection.prepareStatement(query);
        ResultSet rs = pst.executeQuery(query);
        DefaultTableModel model = (DefaultTableModel) tblBarang2.getModel();
        model.setRowCount(0);
        while (rs.next()) {
            // Retrieve the first column as int (assuming it's an integer column)
            int id = rs.getInt(1);
            
            // Retrieve other columns as strings
            String column2 = rs.getString(2);
            String column3 = rs.getString(3);
            String column4 = rs.getString(4);
            String column5 = rs.getString(5);

            // Add the row to the table model
            model.addRow(new Object[]{id, column2, column3, column4, column5});
        }

    } catch (SQLException ex) {
        Logger.getLogger(marketNew.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_MarketActionPerformed

    private void ProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductActionPerformed
        cardLayout.show(pnlCards, "pnlCard2");
    }//GEN-LAST:event_ProductActionPerformed

    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed
        System.exit(0);
    }//GEN-LAST:event_LogoutActionPerformed

    private void MemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MemberActionPerformed
        cardLayout.show(pnlCards, "pnlCard3");
    }//GEN-LAST:event_MemberActionPerformed

    private void inputNoTelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputNoTelpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputNoTelpActionPerformed

    private void inputUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputUsernameActionPerformed

    private void tmblTampilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tmblTampilActionPerformed
    try (
        Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/databasekasir", "root", "")) {
        Statement st = connection.createStatement();
        String query = "SELECT * FROM member";

        PreparedStatement pst = connection.prepareStatement(query);
        ResultSet rs = pst.executeQuery(query);
        DefaultTableModel model = (DefaultTableModel) tblMember.getModel();
        model.setRowCount(0);
        while (rs.next()) {
            // Retrieve the first column as int (assuming it's an integer column)
            int id = rs.getInt(1);
            
            // Retrieve other columns as strings
            String column2 = rs.getString(2);
            String column3 = rs.getString(3);

            // Add the row to the table model
            model.addRow(new Object[]{id, column2, column3});
        }

    } catch (SQLException ex) {
        Logger.getLogger(marketNew.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_tmblTampilActionPerformed

    private void tmblTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tmblTambahActionPerformed
 String nama = inputUsername.getText();
 String nomer = inputNoTelp.getText();
   
    try(
        Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/databasekasir", "root", "")){
        stat = connection.createStatement();
        String sql = "INSERT INTO member (nama,nomer) VALUES (?, ?)";
        PreparedStatement preparedStatement = connection.prepareStatement(sql);
        
        preparedStatement.setString(1, nama);
        preparedStatement.setString(2, nomer);
        
        
        int rowsAffected = preparedStatement.executeUpdate();
        
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan");
        } else {
            JOptionPane.showMessageDialog(this, "Data gagal ditambahkan");
        }

        preparedStatement.close();
        connection.close();
        
         
    }catch(SQLException e){
        System.out.println("" + e.getMessage());
    }        // TODO add your handling code here:        // TODO add your handling code here:
    }//GEN-LAST:event_tmblTambahActionPerformed

    private void buttonNotMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNotMemberActionPerformed
        try {
        // Get the values from inputBayar and inputHarga1
        double bayar = Double.parseDouble(inputBayar.getText());
        double harga1 = Double.parseDouble(inputHarga1.getText());

        // Check if the payment is less than the total amount
        if (bayar < harga1) {
            // Display a JOptionPane with an error message
            JOptionPane.showMessageDialog(this, "Uang yang Dibayarkan Kurang", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            // Subtract the values
            double hasil = bayar - harga1;

            // Set the result in inputHarga
            inputKembali.setText(String.valueOf(hasil));
        }
    } catch (NumberFormatException e) {
        // Handle the case where the input is not a valid double
        // You may want to show an error message or handle it as needed
        JOptionPane.showMessageDialog(this, "Invalid input format", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_buttonNotMemberActionPerformed

    private void tmblHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tmblHapusActionPerformed
    int selectedRowIndex = tblMember.getSelectedRow();

    // Check if a row is selected
    if (selectedRowIndex != -1) {
        // Assuming the first column is the ID column
        Object idObject = tblMember.getValueAt(selectedRowIndex, 0);

        // Check if the ID is not null
        if (idObject != null) {
            // Convert the ID to the appropriate type (e.g., Integer)
            if (idObject instanceof Integer) {
                int memberId = (Integer) idObject;

                // Now, you can use JDBC to delete the record from the database
                deleteMemberFromDatabase(memberId);

            } else {
                // Handle type mismatch
                System.out.println("Invalid ID type (bukan Integer)");
            }
        } else {
            // Handle null ID
            System.out.println("ID adalah null");
        }
    } else {
        // Inform the user that no row is selected
        System.out.println("Mohon memilih row yang akan dihapus");
    }
}
    private void deleteMemberFromDatabase(int memberId) {
    try {
        // Establish a connection to the database
        Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/databasekasir", "root", "");

        // Create a SQL statement
        Statement statement = connection.createStatement();

        // Execute the delete query
        String deleteQuery = "DELETE FROM member WHERE id = " + memberId;
        statement.executeUpdate(deleteQuery);

        // Close the resources
        statement.close();
        connection.close();

        System.out.println("Member berhasil dihapus");
    } catch (SQLException e) {
        e.printStackTrace();
        System.out.println("Error menghapus member dari database");
    }
    }//GEN-LAST:event_tmblHapusActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    String nama2 = inputBarang.getText();
    String harga = inputHarga.getText();
    String jumlah = inputJumlah.getText();
    String kode = inputID.getText();
   
    try(
        Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/databasekasir", "root", "")){
        stat = connection.createStatement();
        String sql = "INSERT INTO barang (nama,harga,jumlah,kode) VALUES (?, ?, ?, ?)";
        PreparedStatement preparedStatement = connection.prepareStatement(sql);
        
        preparedStatement.setString(1, nama2);
        preparedStatement.setString(2, harga);
        preparedStatement.setString(3, jumlah);
        preparedStatement.setString(4, kode);
        
        
        int rowsAffected = preparedStatement.executeUpdate();
        
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan");
        } else {
            JOptionPane.showMessageDialog(this, "Data gagal ditambahkan");
        }

        preparedStatement.close();
        connection.close();
        
         
    }catch(SQLException e){
        System.out.println("" + e.getMessage());
    }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int selectedRowIndex = tblBarang.getSelectedRow();

    // Check if a row is selected
    if (selectedRowIndex != -1) {
        // Assuming the first column is the ID column
        Object idObject = tblBarang.getValueAt(selectedRowIndex, 0);

        // Check if the ID is not null
        if (idObject != null) {
            // Convert the ID to the appropriate type (e.g., Integer)
            if (idObject instanceof Integer) {
                int barangId = (Integer) idObject;

                // Now, you can use JDBC to delete the record from the database
                deleteBarangFromDatabase(barangId);

            } else {
                // Handle type mismatch
                System.out.println("Invalid ID type (bukan Integer)");
            }
        } else {
            // Handle null ID
            System.out.println("ID adalah null");
        }
    } else {
        // Inform the user that no row is selected
        System.out.println("Mohon memilih row yang akan dihapus");
    }
}
    private void deleteBarangFromDatabase(int barangId) {
    try {
        // Establish a connection to the database
        Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/databasekasir", "root", "");

        // Create a SQL statement
        Statement statement = connection.createStatement();

        // Execute the delete query
        String deleteQuery = "DELETE FROM barang WHERE id = " + barangId;
        statement.executeUpdate(deleteQuery);

        // Close the resources
        statement.close();
        connection.close();

        System.out.println("Barang berhasil dihapus");
    } catch (SQLException e) {
        e.printStackTrace();
        System.out.println("Error menghapus barang dari database");
    }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void tmblTampil1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tmblTampil1ActionPerformed
        try (
        Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/databasekasir", "root", "")) {
        Statement st = connection.createStatement();
        String query = "SELECT * FROM barang";

        PreparedStatement pst = connection.prepareStatement(query);
        ResultSet rs = pst.executeQuery(query);
        DefaultTableModel model = (DefaultTableModel) tblBarang.getModel();
        model.setRowCount(0);
        while (rs.next()) {
            // Retrieve the first column as int (assuming it's an integer column)
            int id = rs.getInt(1);
            
            // Retrieve other columns as strings
            String column2 = rs.getString(2);
            String column3 = rs.getString(3);
            String column4 = rs.getString(4);
            String column5 = rs.getString(5);

            // Add the row to the table model
            model.addRow(new Object[]{id, column2, column3, column4, column5});
        }

    } catch (SQLException ex) {
        Logger.getLogger(marketNew.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_tmblTampil1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
    int selectedRowIndex = tblBarang.getSelectedRow();

    // Check if a row is selected
    if (selectedRowIndex != -1) {
        // Assuming the first column is the ID column
        Object idObject = tblBarang.getValueAt(selectedRowIndex, 0);

        // Check if the ID is not null
        if (idObject != null) {
            // Convert the ID to the appropriate type (e.g., Integer)
            if (idObject instanceof Integer) {
                int barangId = (Integer) idObject;

                // Get the updated values from JTextFields
                String updatedNama = inputBarang.getText();
                String updatedHarga = inputHarga.getText();
                String updatedJumlah = inputJumlah.getText();
                String updatedKode = inputID.getText();

                // Now, you can use JDBC to update the record in the database
                updateBarangInDatabase(barangId, updatedNama, updatedHarga, updatedJumlah, updatedKode);

            } else {
                // Handle type mismatch
                System.out.println("Invalid ID type (bukan Integer)");
            }
        } else {
            // Handle null ID
            System.out.println("ID adalah null");
        }
    } else {
        // Inform the user that no row is selected
        System.out.println("Mohon memilih row yang akan diupdate");
    }
    }
    private void updateBarangInDatabase(int barangId, String updatedNama, String updatedHarga, String updatedJumlah, String updatedKode) {
    try {
        // Establish a connection to the database
        Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/databasekasir", "root", "");

        // Create a SQL statement
        Statement statement = connection.createStatement();

        // Execute the update query
        String updateQuery = "UPDATE barang SET nama = ?, harga = ?, jumlah = ?, kode = ? WHERE id = ?";
        PreparedStatement preparedStatement = connection.prepareStatement(updateQuery);
        preparedStatement.setString(1, updatedNama);
        preparedStatement.setString(2, updatedHarga);
        preparedStatement.setString(3, updatedJumlah);
        preparedStatement.setString(4, updatedKode);
        preparedStatement.setInt(5, barangId);
        preparedStatement.executeUpdate();

        // Close the resources
        preparedStatement.close();
        connection.close();

        System.out.println("Barang berhasil diupdate");
    } catch (SQLException e) {
        e.printStackTrace();
        System.out.println("Error mengupdate barang di database");
    }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void tmblHapus1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tmblHapus1ActionPerformed
    int selectedRowIndex = tblMember.getSelectedRow();

    // Check if a row is selected
    if (selectedRowIndex != -1) {
        // Assuming the first column is the ID column
        Object idObject = tblMember.getValueAt(selectedRowIndex, 0);

        // Check if the ID is not null
        if (idObject != null) {
            // Convert the ID to the appropriate type (e.g., Integer)
            if (idObject instanceof Integer) {
                int memberId = (Integer) idObject;

                // Get the updated values from JTextFields
                String updatedNama = inputUsername.getText();
                String updatedNomer = inputNoTelp.getText();

                // Now, you can use JDBC to update the record in the database
                updateMemberInDatabase(memberId, updatedNama, updatedNomer);

            } else {
                // Handle type mismatch
                System.out.println("Invalid ID type (bukan Integer)");
            }
        } else {
            // Handle null ID
            System.out.println("ID adalah null");
        }
    } else {
        // Inform the user that no row is selected
        System.out.println("Mohon memilih row yang akan diupdate");
    }
    }
    private void updateMemberInDatabase(int memberId, String updatedNama, String updatedNomer) {
    try {
        // Establish a connection to the database
        Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/databasekasir", "root", "");

        // Create a SQL statement
        Statement statement = connection.createStatement();

        // Execute the update query
        String updateQuery = "UPDATE member SET nama = ?, nomer = ? WHERE id = ?";
        PreparedStatement preparedStatement = connection.prepareStatement(updateQuery);
        preparedStatement.setString(1, updatedNama);
        preparedStatement.setString(2, updatedNomer);
        preparedStatement.setInt(3, memberId);
        preparedStatement.executeUpdate();

        // Close the resources
        preparedStatement.close();
        connection.close();

        System.out.println("Member berhasil diupdate");
    } catch (SQLException e) {
        e.printStackTrace();
        System.out.println("Error mengupdate member di database");
    }
    }//GEN-LAST:event_tmblHapus1ActionPerformed

    private void buttonMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMemberActionPerformed
        try {
        // Get the values from inputBayar and inputHarga1
        double bayar = Double.parseDouble(inputBayar.getText());
        double harga1 = Double.parseDouble(inputHarga1.getText());

        // Apply a 10% discount
        double harga1WithDiscount = harga1 * 0.9;

        // Check if the payment is less than the discounted total amount
        if (bayar < harga1WithDiscount) {
            // Display a JOptionPane with an error message
            JOptionPane.showMessageDialog(this, "Uang yang Dibayarkan Kurang", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            // Subtract the values with the discount
            double hasil = bayar - harga1WithDiscount;

            // Set the result in inputHarga
            inputKembali.setText(String.valueOf(hasil));
            JOptionPane.showMessageDialog(this, "Anda Mendapatkan Diskon 10%", "Diskon", JOptionPane.INFORMATION_MESSAGE);
        }
    } catch (NumberFormatException e) {
        // Handle the case where the input is not a valid double
        // You may want to show an error message or handle it as needed
        JOptionPane.showMessageDialog(this, "Invalid input format", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_buttonMemberActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void tblBarang2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBarang2MouseClicked
        // TODO add your handling code here:
    double jumlah = Double.parseDouble(inputJumlah3.getText());
    int baris = tblBarang2.getSelectedRow();
    double hargaPerUnit = Double.parseDouble((String) tblBarang2.getValueAt(baris, 2));
    double kolomTotal = hargaPerUnit * jumlah;

    // Set the text of inputHarga1 with kolomTotal
    inputHarga1.setText(String.valueOf(kolomTotal));

    DefaultTableModel tabelAkhir = (DefaultTableModel) tblBarang3.getModel();
    tabelAkhir.addRow(new Object[]{tblBarang2.getValueAt(baris, 0), tblBarang2.getValueAt(baris, 4), tblBarang2.getValueAt(baris, 1), tblBarang2.getValueAt(baris, 2), jumlah, kolomTotal});

    // Calculate and set the sum of kolomTotal in inputHarga1
    double totalKolomTotal = calculateTotalKolomTotal(tabelAkhir);
    inputHarga1.setText(String.valueOf(totalKolomTotal));
    }
    private double calculateTotalKolomTotal(DefaultTableModel model) {
    double total = 0.0;
    for (int i = 0; i < model.getRowCount(); i++) {
        total += (double) model.getValueAt(i, model.getColumnCount() - 1);
    }
    return total;
    }//GEN-LAST:event_tblBarang2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(marketNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(marketNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(marketNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(marketNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new marketNew().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Logout;
    private javax.swing.JButton Market;
    private javax.swing.JButton Member;
    private javax.swing.JButton Product;
    private javax.swing.JButton buttonMember;
    private javax.swing.JButton buttonNotMember;
    private javax.swing.JTextField inputBarang;
    private javax.swing.JTextField inputBayar;
    private javax.swing.JTextField inputHarga;
    private javax.swing.JTextField inputHarga1;
    private javax.swing.JTextField inputID;
    private javax.swing.JTextField inputJumlah;
    private javax.swing.JTextField inputJumlah3;
    private javax.swing.JTextField inputKembali;
    private javax.swing.JTextField inputNamaKasir;
    private javax.swing.JTextField inputNoTelp;
    private javax.swing.JTextField inputUsername;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel pnlCard1;
    private javax.swing.JPanel pnlCard2;
    private javax.swing.JPanel pnlCard3;
    private javax.swing.JPanel pnlCards;
    private javax.swing.JTable tblBarang;
    private javax.swing.JTable tblBarang2;
    private javax.swing.JTable tblBarang3;
    private javax.swing.JTable tblMember;
    private javax.swing.JButton tmblHapus;
    private javax.swing.JButton tmblHapus1;
    private javax.swing.JButton tmblTambah;
    private javax.swing.JButton tmblTampil;
    private javax.swing.JButton tmblTampil1;
    // End of variables declaration//GEN-END:variables

    private void loadTable() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    private void Update_table() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
